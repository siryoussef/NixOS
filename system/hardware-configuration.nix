# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, systemSettings, userSettings, ... }:
let
DiscMounts ={
    "/" = { device = "none"; fsType = "tmpfs"; }; # In-RAM-Root
#     "/" = { device = "/dev/disk/by-label/NRoot"; fsType = "btrfs"; };
    "/nix" = { device = "/dev/disk/by-label/Nix"; fsType = "ext4"; depends = ["/" "/home"];};
    "/boot" = { device = "/dev/disk/by-label/Boot"; fsType = "btrfs"; options = [ "subvol=@Nix" ]; };
    "/home" = { device = "/dev/disk/by-label/Home"; fsType = "btrfs"; options =["subvol=@NHome"];};
#     "/home" = { device = "none"; fsType = "tmpfs"; options = ["rw" "user"]; }; # In-RAM-Home
    "/Volume" = { device = "/dev/disk/by-label/Volume"; fsType = "auto"; };
    "/Shared" = { device = "/dev/disk/by-label/Shared"; fsType = "auto"; };
    "/boot/efi" = { device = "/dev/disk/by-label/BEFI"; fsType = "vfat"; };
     };
BindMounts =(builtins.mapAttrs(x: y: y // {fsType = "none"; options=["bind"];}) rec{

  "/etc/nixos" = { device = "/Shared/@Repo/NixOS";};
  "/etc/nixos/secrets" = { device = "/Shared/@Repo/NixOS-private";};
  Downloads = { mountPoint = "/home/"+userSettings.username+"/Downloads"; device = "/Volume/@Storage/Downloads"; depends = [ "/" "/home" "/Volume"]; };
  vscode= {mountPoint = "/home/"+userSettings.username+"/.vscode"; device = "/Shared/@Home/.vscode";};
  fish={mountPoint = "/home/"+userSettings.username+"/.local/share/fish"; device = "/Shared/@Home/fish";};
  kate={mountPoint = "/home/"+userSettings.username+"/.local/share/kate"; device = "/Shared/@Home/kate";};
  kdevelop={mountPoint = "/home/"+userSettings.username+"/.local/share/kdevelop"; device = "/Shared/@Home/kdevelop";};
  onlyoffice={ mountPoint = "/home/"+userSettings.username+"/.local/share/onlyoffice"; device = "/Shared/@Home/onlyoffice";};
  whatsapp-for-linux={ mountPoint = "/home/"+userSettings.username+"/.local/share/whatsapp-for-linux"; device = "/Shared/@Home/whatsapp-for-linux";};
  KotatogramDesktop={mountPoint = "/home/"+userSettings.username+"/.local/share/KotatogramDesktop"; device = "/Shared/@Home/KotatogramDesktop";};
  Github={mountPoint = "/home/"+userSettings.username+"/.config/GitHub Desktop"; device = "/Shared/@Home/.config/GitHub Desktop";};
  GitRepos= {mountPoint = "/home/"+userSettings.username+"/Documents/GitHub"; device = "/Shared/@Repo";};
  logseq= {mountPoint = "/home/"+userSettings.username+"/.logseq"; device = "/Shared/@Repo/Note/.logseq";};
  Note= {mountPoint = "/home/"+userSettings.username+"/Note"; device = "/Shared/@Repo/Note";};

   ## Flatpak bind mounts
  "/var/lib/flatpak" ={device = "/Shared/flatpak/system";};
  User-flatpaks ={mountPoint="/home/"+userSettings.username+"/.local/share/flatpak";device = "/Shared/flatpak/user";};
  FlatpakAppData ={mountPoint="/home/"+userSettings.username+"/.var/app";device = "/Shared/flatpak/appdata";};

  ## WebBrowsers
  floorp= { mountPoint = "/home/"+userSettings.username+"/.floorp"; device = "/Shared/@Home/.floorp";  };
  firedragonFlatpakProfiles={mountPoint= FlatpakAppData.mountPoint+"/org.garudalinux.firedragon/.firedragon"; device = floorp.device;};
  firedragonProfiles={mountPoint= "/home/"+userSettings.username+"/.firedragon"; device = floorp.device;};

   ## Waydroid
  waydroidData={ mountPoint = "/home/"+userSettings.username+"/.local/share/waydroid"; device = "/Shared/@Home/waydroid/waydroidData";};
  waydroidSystem={ mountPoint = "/var/lib/waydroid"; device = "/Shared/@Home/waydroid/waydroidSystem"; };
  waydroidDownloadsShareMain= { mountPoint = "/home/"+userSettings.username+"/.local/share/waydroid/data/media/0/Download"; device = "/home/"+userSettings.username+"/Downloads"; depends = [ "/" "/home" "/Volume" ] ++ (map(x: "${x.mountPoint}")[Downloads waydroidData]); }; #could be simpler without the map function if one variable & may work perfectly without the depends option at all ! ,  but this is for educatory purposes to help in future modifications

   ## Plasma config files!!
#    kateConfig={ mountPoint = "/home/"+userSettings.username+"/.config/kate"; device = "/Shared/@Home/.config/kate";  };
  });
## Overlayfs

#   merged = (lib.recursiveUpdate DiscMounts BindMounts);
fileSystems = DiscMounts // BindMounts;

in{ inherit fileSystems;
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];
  boot = {
    initrd = { availableKernelModules = [ "xhci_pci" "usbhid" "ehci_pci" "ahci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" "btrfs"]; kernelModules = [ "dm-snapshot" ]; };
    kernelParams = ["DP-2=1280x1024"];
    kernelModules = [ "kvm-intel" "i2c-dev" "i2c-piix4" "cpufreq_powersave"];
    extraModulePackages = [ ];
    supportedFilesystems = ["vfat" "ext4" "btrfs" "ntfs"];
    loader = { grub.useOSProber = true; efi.efiSysMountPoint = systemSettings.bootMountPath; # does nothing if running bios rather than uefi
      };
  };


swapDevices = [ { device = "/dev/disk/by-label/NixSwap"; } ];
#   btrfs = { autoScrub = { enable = true; interval = "monthly"; fileSystems = [ "/Volume" ]; }; };


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.graphics.enable = true;
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave"; #wasn't there by default
}
